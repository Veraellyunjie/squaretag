=for html <a href="https://travis-ci.org/mdom/squaretag"><img src="https://travis-ci.org/mdom/squaretag.svg?branch=master"></a>  <a href='https://coveralls.io/r/mdom/squaretag?branch=master'><img src='https://coveralls.io/repos/mdom/squaretag/badge.png?branch=master' alt='Coverage Status' /></a>

=head1 NAME

squaretag - tag files by using filenames

=head1 SYNOPSIS

  squaretag add    [--verbose|-v] [--dry-run|-n] TAG FILES...
  squaretag remove [--verbose|-v] [--dry-run|-n] TAG FILES...
  squaretag clear  [--verbose|-v] [--dry-run|-n] FILES...
  squaretag rename [--verbose|-v] [--dry-run|-n] OLD_TAG NEW_TAG FILES...
  squaretag list FILES...
  squaretag search SEARCH FILES...

=head1 DESCRIPTION

Squaretag helps you to organize your files by tagging them. The tags
are saved in the filename by adding all tags in square brackets either
at the end of the filename or just before the last dot.

=head1 EXAMPLES

Suppose the current directory contains the following files:

  $ ls 
  picture01.jpg
  picture02

Now you want to add the tag I<family> to all pictures.

  $ squaretag add family *

The filenames now contain the tag I<family>:

  $ ls
  picture01[family].jpg
  pciture02[family]

=head1 COMMANDS

=over 4

=item add TAG FILES...

Add TAG to FILES. TAG is a comma seperated list of tags to add. If
a tag has a suffix of I<-> this tag will be removed from the file.

=item remove TAG FILES...

Remove TAG from FILES. TAG is a comma seperated list of tags to remove. If
a tag has a suffix of I<+> this tag will be added to the file.

=item search SPEC FILES...

List all FILES that match the search SPEC. SPEC can contain tags and
the usual boolean operators.

For example:

  read && good
  !read || (not_read && prio )

=item clear FILES...

Remove all tags from FILES.

=item rename OLD_TAG NEW_TAG FILES...

Rename OLD_TAG in NEW_TAG in all FILES.

=item list FILES...

List and count all tags for FILES. The tags are sorted in descending
order of frequency.

=back

=head1 RATIONALE

Tagging files in a way that tags are preserved cross-platform or even
cross-filesystem seems to be a hard problem with no clear cut solution.

=head2 Fileformat

Some file formats as mp3 or pdf support saving tags inside the files but there
a a lot (probably most) that don't. And even the former need special programs
to do that.

=head2 Filesystem

Many modern file systems support tags and special meta data streams, but the
tags are most likely lost when you copy files from one file system to the next.

=head2 External database

Keeping the tags in a external database requires a sync step after moving or
deleting files. This is harder than it sounds, you probably need the keep
checksums to reckognize known files after a rename.

=head2 Filename

All filesystems limit the length of the filename, so the number of tags
you can save per file is also limited. And even before you reach the
limit, the filename will be hard to read.

But at least it works for all kinds of files, it not dependent on your file or
operating sytemen is does not need external tools or syncing steps.

=head1 SEE ALSO

L<tmsu|http://tmsu.org/>, L<tagspaces|https://www.tagspaces.org/>

=head1 COPYRIGHT AND LICENSE

Copyright 2016 Mario Domgoergen C<< <mario@domgoergen.com> >>

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/>.

